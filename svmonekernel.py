# -*- coding: utf-8 -*-
"""SVMOneKernel.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KrfC77flZvTb9tpW_c8D0ih0ad9CJXDm
"""

import numpy as np
import matplotlib.pyplot as plt
from sklearn import svm,datasets

from sklearn.metrics import classification_report, confusion_matrix

iris=datasets.load_iris()
#consider only 2 features
x=iris.data[:,:2]
y=iris.target

svc=svm.SVC(kernel='rbf',C=10000,gamma=4000).fit(x,y)

x_min,x_max=x[:,0].min()-1, x[:,0].max()+1
y_min,y_max=x[:,0].min()-1, x[:,0].max()+1
h=(x_max/x_min)/100
xx,yy=np.meshgrid(np.arange(x_min,x_max,h),np.arange(y_min,y_max,h))

svc.score(x,y)

confusion_matrix(y,svc.predict(x))

plt.subplot(1,1,1)
z=svc.predict(np.c_[xx.ravel(),yy.ravel()])
z=z.reshape(xx.shape)
plt.contourf(xx,yy,z,cmap=plt.cm.Paired,alpha=0.8)

plt.scatter(x[:,0],x[:,1],c=y,cmap=plt.cm.Paired)
plt.xlabel('SepalLength')
plt.ylabel('sepalWidth')
plt.xlim(xx.min(),xx.max())
plt.title('SVC WITH LINEAR KERNAL')
plt.show()

print(classification_report(y,svc.predict(x)))

cm = confusion_matrix(y,svc.predict(x))

fig,ax= plt.subplots(figsize=(8,8))
ax.imshow(cm)
ax.grid(False)
ax.xaxis.set(ticks=(0,1,2),ticklabels=('Predicted 0s','Predicted 1s'))
ax.yaxis.set(ticks=(0,1,2),ticklabels=('Actual 0s','Actual 1s'))
ax.set_ylim(1.5,-0.5)
for i in range(3):
  for j in range(3):
    ax.text(j,i,cm[i,j], ha='center', va='center',color='red')
plt.show()

svc.predict(x)

y

svc.score(x,y)

from sklearn.svm import SVC
svclassifier=SVC(kernel='sigmoid')
svclassifier.fit(x,y)

y_pred=svclassifier.predict(x)

confusion_matrix(y,y_pred)

svclassifier.score(x,y)

